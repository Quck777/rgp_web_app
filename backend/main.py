from fastapi import FastAPI, Request, Form
from fastapi.responses import RedirectResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
import random
import os

app = FastAPI()
app.mount("/static", StaticFiles(directory="backend/static"), name="static")
templates = Jinja2Templates(directory="backend/templates")

# –ò–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
player = {
    "name": "–ì–µ—Ä–æ–π",
    "location": "–ì–æ—Ä–æ–¥",
    "log": [],
    "strength": 1,
    "agility": 1,
    "endurance": 1,
    "points": 5,
    "hp": 10,
}

locations = {
    "–ì–æ—Ä–æ–¥": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–æ—Ä–æ–¥.",
    "–õ–µ—Å": "–¢—ã –≤–æ—à—ë–ª –≤ —Ç—ë–º–Ω—ã–π –ª–µ—Å.",
    "–®–∞—Ö—Ç–∞": "–¢—ã —Å–ø—É—Å—Ç–∏–ª—Å—è –≤ —Å—Ç–∞—Ä—É—é —à–∞—Ö—Ç—É.",
}

monsters = {
    "–õ–µ—Å": {"name": "–í–æ–ª–∫", "hp": 5, "damage": 2},
    "–®–∞—Ö—Ç–∞": {"name": "–ì–æ–±–ª–∏–Ω", "hp": 7, "damage": 3},
    "–ì–æ—Ä–æ–¥": None,
}


def add_log(message: str):
    player["log"].insert(0, message)
    player["log"] = player["log"][:10]


@app.get("/")
async def root(request: Request):
    return templates.TemplateResponse("index.html", {
        "request": request,
        "player": player,
        "location": player["location"],
        "description": locations[player["location"]],
    })


@app.post("/move")
async def move(request: Request, place: str = Form(...)):
    player["location"] = place
    add_log(f"üîÑ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ: {place}")
    return RedirectResponse("/", status_code=302)


@app.post("/fight")
async def fight(request: Request):
    location = player["location"]
    monster = monsters.get(location)

    if not monster:
        add_log("üòê –ó–¥–µ—Å—å –Ω–µ—Ç —Å –∫–µ–º —Å—Ä–∞–∂–∞—Ç—å—Å—è.")
        return RedirectResponse("/", status_code=302)

    player_hp = 5 + player["endurance"] * 2
    monster_hp = monster["hp"]
    player_damage = 1 + player["strength"]
    monster_damage = monster["damage"]

    while player_hp > 0 and monster_hp > 0:
        if random.random() < (0.1 + player["agility"] * 0.05):
            add_log("üåÄ –¢—ã —É–∫–ª–æ–Ω–∏–ª—Å—è –æ—Ç —É–¥–∞—Ä–∞!")
        else:
            player_hp -= monster_damage

        monster_hp -= player_damage

    if player_hp > 0:
        add_log(f"üèÜ –¢—ã –ø–æ–±–µ–¥–∏–ª {monster['name']}!")
        player["points"] += 1
    else:
        add_log("üíÄ –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª...")

    return RedirectResponse("/", status_code=302)


@app.post("/upgrade")
async def upgrade(request: Request, stat: str = Form(...)):
    if player["points"] > 0 and stat in ["strength", "endurance", "agility"]:
        player[stat] += 1
        player["points"] -= 1
        add_log(f"‚¨ÜÔ∏è –ü—Ä–æ–∫–∞—á–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä: {stat.capitalize()} +1")
    return RedirectResponse("/", status_code=302)
